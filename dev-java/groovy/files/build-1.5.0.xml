<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.6.2 or above.        -->
<!-- ====================================================================== -->

<!-- ====================================================================== -->
<!-- ===================== - DO NOT EDIT THIS FILE! - ===================== -->
<!-- ====================================================================== -->
<!--                                                                        -->
<!-- Any modifications will be overwritten.                                 -->
<!--                                                                        -->
<!-- Generated by Maven Ant Plugin on 12/14/07 11:06 AM                     -->
<!-- See: http://maven.apache.org/plugins/maven-ant-plugin/                 -->
<!--                                                                        -->
<!-- ====================================================================== -->

<project name="groovy-from-maven" default="package" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environnement properties                                         -->
  <!-- ====================================================================== -->

  <property file="${user.home}/.m2/maven.properties"/>
  <property file="maven-build.properties"/>

  <property name="maven.build.finalName" value="groovy-1.5.0"/>
  <property name="maven.build.dir" value="target"/>
  <property name="maven.build.outputDir" value="${maven.build.dir}/classes"/>
  <property name="maven.build.srcDir.0" value="src/main"/>
  <property name="maven.build.resourceDir.0" value="src/main/resources"/>
  <property name="maven.build.testOutputDir" value="${maven.build.dir}/test-classes"/>
  <property name="maven.build.testDir.0" value="src/test"/>
  <property name="maven.build.testResourceDir.0" value="src/main/resources"/>
  <property name="maven.test.reports" value="${maven.build.dir}/test-reports"/>
  <property name="maven.reporting.outputDirectory" value="${maven.build.dir}/site"/>

  <property name="maven.repo.local" value="/home/elvanor/.m2/repository"/>
  <property name="maven.settings.offline" value="false"/>
  <property name="maven.settings.interactiveMode" value="true"/>

  <!-- ====================================================================== -->
  <!-- Defining classpaths                                                    -->
  <!-- ====================================================================== -->

  <path id="build.classpath">
	  <fileset dir="target/lib" includes="**/*.jar">
    </fileset>
  </path>
  <path id="build.test.classpath">
    <fileset dir="${maven.repo.local}">
      <include name="commons-cli/commons-cli/1.0/commons-cli-1.0.jar"/>
      <include name="asm/asm-attrs/2.2/asm-attrs-2.2.jar"/>
      <include name="hsqldb/hsqldb/1.8.0.7/hsqldb-1.8.0.7.jar"/>
      <include name="org/apache/ant/ant-junit/1.7.0/ant-junit-1.7.0.jar"/>
      <include name="asm/asm-tree/2.2/asm-tree-2.2.jar"/>
      <include name="asm/asm/2.2/asm-2.2.jar"/>
      <include name="antlr/antlr/2.7.6/antlr-2.7.6.jar"/>
      <include name="jmock/jmock-cglib/1.2.0/jmock-cglib-1.2.0.jar"/>
      <include name="xmlunit/xmlunit/1.1/xmlunit-1.1.jar"/>
      <include name="bsf/bsf/2.4.0/bsf-2.4.0.jar"/>
      <include name="jmock/jmock/1.2.0/jmock-1.2.0.jar"/>
      <include name="mockobjects/mockobjects-core/0.09/mockobjects-core-0.09.jar"/>
      <include name="commons-logging/commons-logging/1.1/commons-logging-1.1.jar"/>
      <include name="cglib/cglib-nodep/2.1_3/cglib-nodep-2.1_3.jar"/>
      <include name="org/apache/ant/ant/1.7.0/ant-1.7.0.jar"/>
      <include name="xpp3/xpp3_min/1.1.3.4.O/xpp3_min-1.1.3.4.O.jar"/>
      <include name="jline/jline/0.9.93/jline-0.9.93.jar"/>
      <include name="mx4j/mx4j/3.0.2/mx4j-3.0.2.jar"/>
      <include name="asm/asm-util/2.2/asm-util-2.2.jar"/>
      <include name="junit/junit/3.8.2/junit-3.8.2.jar"/>
      <include name="asm/asm-analysis/2.2/asm-analysis-2.2.jar"/>
      <include name="org/apache/ant/ant-launcher/1.7.0/ant-launcher-1.7.0.jar"/>
      <include name="javax/servlet/servlet-api/2.4/servlet-api-2.4.jar"/>
      <include name="com/thoughtworks/xstream/xstream/1.2.2/xstream-1.2.2.jar"/>
      <include name="javax/servlet/jsp-api/2.0/jsp-api-2.0.jar"/>
    </fileset>
  </path>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${maven.build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" depends="get-deps" description="Compile the code">
    <mkdir dir="${maven.build.outputDir}"/>
    <javac destdir="${maven.build.outputDir}" 
           nowarn="false" 
           debug="true" 
           optimize="false" 
           deprecation="true" 
           verbose="false" 
           fork="false">
      <src>
        <pathelement location="${maven.build.srcDir.0}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Test-compilation target                                                -->
  <!-- ====================================================================== -->

  <target name="compile-tests" 
          depends="junit-present, compile" 
          description="Compile the test code" 
          if="junit.present">
    <mkdir dir="${maven.build.testOutputDir}"/>
    <javac destdir="${maven.build.testOutputDir}" 
           nowarn="false" 
           debug="true" 
           optimize="false" 
           deprecation="true" 
           verbose="false" 
           fork="false">
      <src>
        <pathelement location="${maven.build.testDir.0}"/>
      </src>
      <classpath>
        <path refid="build.test.classpath"/>
        <pathelement location="${maven.build.outputDir}"/>
      </classpath>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Run all tests                                                          -->
  <!-- ====================================================================== -->

  <target name="test" 
          depends="junit-present, compile-tests" 
          if="junit.present" 
          description="Run the test cases">
    <mkdir dir="${maven.test.reports}"/>
    <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
      <sysproperty key="basedir" value="."/>
      <formatter type="xml"/>
      <formatter type="plain" usefile="false"/>
      <classpath>
        <path refid="build.test.classpath"/>
        <pathelement location="${maven.build.outputDir}"/>
        <pathelement location="${maven.build.testOutputDir}"/>
      </classpath>
      <batchtest todir="${maven.test.reports}">
        <fileset dir="${maven.build.testDir.0}">
          <include name="**/*Test.java"/>
          <exclude name="**/*Abstract*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="test-junit-present">
    <available classname="junit.framework.Test" property="junit.present"/>
  </target>

  <target name="junit-present" 
          depends="test-junit-present" 
          unless="junit.present">
    <echo>=================================== WARNING ===================================</echo>
    <echo> Junit isn&apos;t present in your $ANT_HOME/lib directory. Tests not executed. </echo>
    <echo>===============================================================================</echo>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${maven.build.srcDir.0}" 
             packagenames="*" 
             destdir="${maven.reporting.outputDirectory}/apidocs" 
             access="protected" 
             old="false" 
             verbose="false" 
             version="true" 
             use="true" 
             author="true" 
             splitindex="false" 
             nodeprecated="false" 
             nodeprecatedlist="false" 
             notree="false" 
             noindex="false" 
             nohelp="false" 
             nonavbar="false" 
             serialwarn="false" 
             charset="ISO-8859-1" 
             linksource="false" 
             breakiterator="false"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile" description="Package the application">
    <jar jarfile="${maven.build.dir}/${maven.build.finalName}.jar" 
         compress="true" 
         index="false" 
         basedir="${maven.build.outputDir}" 
         excludes="**/package.html"/>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

  <!-- ====================================================================== -->
  <!-- Download dependencies target                                           -->
  <!-- ====================================================================== -->

  <target name="test-offline">
    <condition property="maven.mode.offline">
      <equals arg1="${maven.settings.offline}" arg2="true"/>
    </condition>
  </target>

  <target name="get-deps" 
          depends="test-offline" 
          description="Download all dependencies" 
          unless="maven.mode.offline">
  </target>
</project>