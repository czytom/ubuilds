diff --git a/java/engine/org/apache/derby/vti/UpdatableVTITemplate.java b/java/engine/org/apache/derby/vti/UpdatableVTITemplate.java
index afeb9be..114ca73 100644
--- a/java/engine/org/apache/derby/vti/UpdatableVTITemplate.java
+++ b/java/engine/org/apache/derby/vti/UpdatableVTITemplate.java
@@ -25,6 +25,7 @@ import org.apache.derby.iapi.reference.JDBC20Translation;
 
 import java.sql.Connection;
 import java.sql.Date;
+import java.sql.ParameterMetaData;
 import java.sql.Statement;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
@@ -35,6 +36,7 @@ import java.sql.SQLWarning;
 import java.sql.Time;
 import java.sql.Timestamp;
 import java.math.BigDecimal;
+import java.net.URL;
 import java.sql.Blob;
 import java.sql.Ref;
 import java.sql.Clob;
@@ -686,4 +688,82 @@ public abstract class UpdatableVTITemplate implements PreparedStatement
 	public void setArray(int i, Array x) throws SQLException {
 		throw new SQLException("setArray");
 	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.PreparedStatement#getParameterMetaData()
+	 */
+	public ParameterMetaData getParameterMetaData() throws SQLException {
+		throw new SQLException("getParameterMetaData");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.PreparedStatement#setURL(int, java.net.URL)
+	 */
+	public void setURL(int parameterIndex, URL x) throws SQLException {
+		throw new SQLException("setURL");
+		
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#execute(java.lang.String, int)
+	 */
+	public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
+		throw new SQLException("execute");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#execute(java.lang.String, int[])
+	 */
+	public boolean execute(String sql, int[] columnIndexes) throws SQLException {
+		throw new SQLException("execute");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#execute(java.lang.String, java.lang.String[])
+	 */
+	public boolean execute(String sql, String[] columnNames) throws SQLException {
+		throw new SQLException("execute");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#executeUpdate(java.lang.String, int)
+	 */
+	public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
+		throw new SQLException("executeUpdate");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#executeUpdate(java.lang.String, int[])
+	 */
+	public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
+		throw new SQLException("executeUpdate");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#executeUpdate(java.lang.String, java.lang.String[])
+	 */
+	public int executeUpdate(String sql, String[] columnNames) throws SQLException {
+		throw new SQLException("executeUpdate");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#getGeneratedKeys()
+	 */
+	public ResultSet getGeneratedKeys() throws SQLException {
+		throw new SQLException("getGeneratedKeys");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#getMoreResults(int)
+	 */
+	public boolean getMoreResults(int current) throws SQLException {
+		throw new SQLException("getMoreResults");
+	}
+
+	/* (non-Javadoc)
+	 * @see java.sql.Statement#getResultSetHoldability()
+	 */
+	public int getResultSetHoldability() throws SQLException {
+		throw new SQLException("getResultSetHoldability");
+	}
 }
