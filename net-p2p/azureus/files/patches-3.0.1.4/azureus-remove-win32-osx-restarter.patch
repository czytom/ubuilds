# remove references to win32 and osx code we don't build
# patch by caster
diff --git a/com/aelitis/azureus/core/update/impl/AzureusRestarterImpl.java b/com/aelitis/azureus/core/update/impl/AzureusRestarterImpl.java
index 55d1080..a418c7b 100644
--- a/com/aelitis/azureus/core/update/impl/AzureusRestarterImpl.java
+++ b/com/aelitis/azureus/core/update/impl/AzureusRestarterImpl.java
@@ -29,8 +29,6 @@ import org.gudy.azureus2.core3.logging.*;
 import org.gudy.azureus2.core3.util.*;
 import org.gudy.azureus2.platform.PlatformManager;
 import org.gudy.azureus2.platform.PlatformManagerFactory;
-import org.gudy.azureus2.platform.win32.access.AEWin32Access;
-import org.gudy.azureus2.platform.win32.access.AEWin32Manager;
 
 import com.aelitis.azureus.core.AzureusCore;
 import com.aelitis.azureus.core.AzureusCoreFactory;
@@ -211,27 +209,6 @@ AzureusRestarterImpl
 	}
 	  
 	
-	private boolean
-	win32NativeRestart(
-		PrintWriter	log,
-		String		exec )
-	{
-	    try{
-	    		// we need to spawn without inheriting handles
-	    	
-	    	PlatformManager pm = PlatformManagerFactory.getPlatformManager();
-	    	
-	    	pm.createProcess( exec, false );
-	    
-	    	return( true );
-	    	
-	    }catch(Throwable e) {
-	        e.printStackTrace(log);
-	        
-	        return( false );
-	    }
-	}
-	
 
 	private String getExeUpdater(PrintWriter log) {
 		try {
@@ -294,116 +271,6 @@ AzureusRestarterImpl
 		return null;
 	}
 
-  private boolean restartViaEXE(PrintWriter log,
-  		String exeUpdater,
-      String[]  properties,
-      String[]  parameters,
-      String backupJavaRunString) 
-  {
-		try {
-			String execEXE = "\"-J" + getClassPath().replaceAll("\\\"", "") + "\" ";
-
-			for (int i = 0; i < properties.length; i++) {
-				execEXE += "\"-J" + properties[i].replaceAll("\\\"", "") + "\" ";
-			}
-
-			for (int i = 0; i < properties.length; i++) {
-				execEXE += "\"-J" + properties[i].replaceAll("\\\"", "") + "\" ";
-			}
-
-			for (int i = 0; i < parameters.length; i++) {
-				execEXE += " \"" + parameters[i].replaceAll("\\\"", "") + "\"";
-			}
-
-			log.println("Launch via " + exeUpdater + " params " + execEXE);
-			
-			int result;
-			
-			AEWin32Access accessor = AEWin32Manager.getAccessor(true);
-			if (accessor == null) {
-				result = -123;
-			} else {
-				result = accessor.shellExecute(null, exeUpdater, execEXE,
-					SystemProperties.getApplicationPath(), AEWin32Access.SW_NORMAL);
-			}
-
-			/*
-			 * Some results:
-			 * 0: OOM
-			 * 2: FNF
-			 * 3: Path Not Foud
-			 * 5: Access Denied (User clicked cancel on admin access dialog)
-			 * 8: OOM
-			 * 11: Bad Format
-			 * 26: Sharing Violation
-			 * 27: Association incomplete
-			 * 28: DDE Timeout
-			 * 29: DDE Fail
-			 * 30: DDE Busy
-			 * 31: No Association
-			 * 32: DLL Not found
-			 * >32: OK!
-			 */
-			log.println("   -> " + result);
-
-			if (result <= 32) {
-				String sErrorReason = "";
-				String key = null;
-
-				switch (result) {
-					case 0:
-					case 8:
-						key = "oom";
-						break;
-
-					case 2:
-						key = "fnf";
-						break;
-
-					case 3:
-						key = "pnf";
-						break;
-
-					case 5:
-						key = "denied";
-						break;
-
-					case 11:
-						key = "bad";
-						break;
-						
-					case -123:
-						key = "nowin32";
-						break;
-
-					default:
-						sErrorReason = "" + result;
-						break;
-				}
-				if (key != null) {
-					sErrorReason = MessageText.getString("restart.error." + key,
-							new String[] {
-								exeUpdater,
-								SystemProperties.getApplicationPath(),
-							});
-				}
-				Logger.log(new LogAlert(false, LogAlert.AT_ERROR,
-						MessageText.getString("restart.error", new String[] {
-							sErrorReason
-						})));
-				return false;
-			}
-		} catch (Throwable f) {
-
-			f.printStackTrace(log);
-
-			return javaSpawn(log, backupJavaRunString);
-		}
-
-		return true;
-	}
-  
-
   // ****************** This code is copied into Restarter / Updater so make changes there too !!!
   
   
@@ -416,58 +283,9 @@ AzureusRestarterImpl
     String[]  properties,
     String[]  parameters ) 
   {
-    if(Constants.isOSX){
-    	
-    	restartAzureus_OSX(log,mainClass,properties,parameters);
-    	
-    }else if( Constants.isUnix ){
-    	
     	restartAzureus_Unix(log,mainClass,properties,parameters);
-      
-    }else{
-    	
-    	restartAzureus_win32(log,mainClass,properties,parameters);
-    }
   }
   
-  private void 
-  restartAzureus_win32(
-      PrintWriter log,
-    String    mainClass,
-    String[]  properties,
-    String[]  parameters) 
-  {
-  	String exeUpdater = getExeUpdater(log);  // Not for Updater.java
-
-  	String exec;
-
-		//Classic restart way using Runtime.exec directly on java(w)
-		exec = "\"" + JAVA_EXEC_DIR + "javaw\" " + getClassPath() + getLibraryPath();
-
-		for (int i = 0; i < properties.length; i++) {
-			exec += properties[i] + " ";
-		}
-
-		exec += mainClass;
-
-		for (int i = 0; i < parameters.length; i++) {
-			exec += " \"" + parameters[i] + "\"";
-		}
-
-		if (exeUpdater != null) {
-			restartViaEXE(log, exeUpdater, properties, parameters, exec);
-		} else {
-			if (log != null) {
-				log.println("  " + exec);
-			}
-
-			if (!win32NativeRestart(log, exec)) {
-				javaSpawn(log, exec);
-			}
-		}
-	}
-  
-
 	private boolean
 	javaSpawn(
 		PrintWriter log, 
@@ -491,30 +309,6 @@ AzureusRestarterImpl
 		}
 	}
 
-	private void 
-  restartAzureus_OSX(
-      PrintWriter log,
-    String mainClass,
-    String[]  properties,
-    String[] parameters) 
-  {
-
-     String exec = "\"" + JAVA_EXEC_DIR + "java\" " + getClassPath() + getLibraryPath();
-  	 
-     for (int i=0;i<properties.length;i++){
-    	 exec += properties[i] + " ";
-     }
-    
-     exec += mainClass ;
-    
-     for(int i = 0 ; i < parameters.length ; i++) {
-    	 exec += " \"" + parameters[i] + "\"";
-     }
-
-     runExternalCommandViaUnixShell( log, exec );
-  }
-  
-  
   
   private void 
   restartAzureus_Unix(
